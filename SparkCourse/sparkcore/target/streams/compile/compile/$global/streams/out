[0m[[0m[33mwarn[0m] [0m[0m/home/cloudera/projects/SparkCourse/sparkcore/src/main/scala/org/dvs/spark/core/Assignment/Simple/Solutions/Assignment1.scala:87:14: [wartremover:Any] Inferred type containing Any[0m
[0m[[0m[33mwarn[0m] [0m[0m    .foreach(println)[0m
[0m[[0m[33mwarn[0m] [0m[0m             ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/cloudera/projects/SparkCourse/sparkcore/src/main/scala/org/dvs/spark/core/Assignment/Simple/Solutions/Assignment1.scala:95:15: [wartremover:Equals] == is disabled - use === or equivalent instead[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (x == currentvalue) Removeduplicates(xs, currentvalue, currentlist)[0m
[0m[[0m[33mwarn[0m] [0m[0m              ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/cloudera/projects/SparkCourse/sparkcore/src/main/scala/org/dvs/spark/core/Assignment/Simple/Solutions/Assignment1.scala:18:14: [wartremover:FinalCaseClass] case classes must be final[0m
[0m[[0m[33mwarn[0m] [0m[0m  case class User(userid: Int,[0m
[0m[[0m[33mwarn[0m] [0m[0m             ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/cloudera/projects/SparkCourse/sparkcore/src/main/scala/org/dvs/spark/core/Assignment/Simple/Solutions/Assignment1.scala:23:14: [wartremover:FinalCaseClass] case classes must be final[0m
[0m[[0m[33mwarn[0m] [0m[0m  case class Transaction(transactionid: Int,[0m
[0m[[0m[33mwarn[0m] [0m[0m             ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/cloudera/projects/SparkCourse/sparkcore/src/main/scala/org/dvs/spark/core/Assignment/Simple/Solutions/Assignment1.scala:29:7: [wartremover:PublicInference] Public member must have an explicit type ascription[0m
[0m[[0m[33mwarn[0m] [0m[0m  val conf = new SparkConf().setAppName("Assignment1").setMaster("local")[0m
[0m[[0m[33mwarn[0m] [0m[0m      ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/cloudera/projects/SparkCourse/sparkcore/src/main/scala/org/dvs/spark/core/Assignment/Simple/Solutions/Assignment1.scala:30:7: [wartremover:PublicInference] Public member must have an explicit type ascription[0m
[0m[[0m[33mwarn[0m] [0m[0m  val context = new SparkContext(conf)[0m
[0m[[0m[33mwarn[0m] [0m[0m      ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/cloudera/projects/SparkCourse/sparkcore/src/main/scala/org/dvs/spark/core/Assignment/Simple/Solutions/Assignment1.scala:33:7: [wartremover:PublicInference] Public member must have an explicit type ascription[0m
[0m[[0m[33mwarn[0m] [0m[0m  val UserRDD = context.textFile([0m
[0m[[0m[33mwarn[0m] [0m[0m      ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/cloudera/projects/SparkCourse/sparkcore/src/main/scala/org/dvs/spark/core/Assignment/Simple/Solutions/Assignment1.scala:37:7: [wartremover:PublicInference] Public member must have an explicit type ascription[0m
[0m[[0m[33mwarn[0m] [0m[0m  val TransactionRDD = context.textFile([0m
[0m[[0m[33mwarn[0m] [0m[0m      ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/cloudera/projects/SparkCourse/sparkcore/src/main/scala/org/dvs/spark/core/Assignment/Simple/Solutions/Assignment1.scala:42:7: [wartremover:PublicInference] Public member must have an explicit type ascription[0m
[0m[[0m[33mwarn[0m] [0m[0m  val UserObjectRDD = UserRDD.map(line => {[0m
[0m[[0m[33mwarn[0m] [0m[0m      ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/cloudera/projects/SparkCourse/sparkcore/src/main/scala/org/dvs/spark/core/Assignment/Simple/Solutions/Assignment1.scala:47:7: [wartremover:PublicInference] Public member must have an explicit type ascription[0m
[0m[[0m[33mwarn[0m] [0m[0m  val TransObjectRDD = TransactionRDD.map(line => {[0m
[0m[[0m[33mwarn[0m] [0m[0m      ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/cloudera/projects/SparkCourse/sparkcore/src/main/scala/org/dvs/spark/core/Assignment/Simple/Solutions/Assignment1.scala:60:7: [wartremover:PublicInference] Public member must have an explicit type ascription[0m
[0m[[0m[33mwarn[0m] [0m[0m  val UserPairRDD = UserObjectRDD.map(user => {[0m
[0m[[0m[33mwarn[0m] [0m[0m      ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/cloudera/projects/SparkCourse/sparkcore/src/main/scala/org/dvs/spark/core/Assignment/Simple/Solutions/Assignment1.scala:63:7: [wartremover:PublicInference] Public member must have an explicit type ascription[0m
[0m[[0m[33mwarn[0m] [0m[0m  val TranPairRDD = TransObjectRDD.map(tran => {[0m
[0m[[0m[33mwarn[0m] [0m[0m      ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/cloudera/projects/SparkCourse/sparkcore/src/main/scala/org/dvs/spark/core/Assignment/Simple/Solutions/Assignment1.scala:67:7: [wartremover:PublicInference] Public member must have an explicit type ascription[0m
[0m[[0m[33mwarn[0m] [0m[0m  val CombineRDD = UserPairRDD.join(TranPairRDD, 1)[0m
[0m[[0m[33mwarn[0m] [0m[0m      ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/cloudera/projects/SparkCourse/sparkcore/src/main/scala/org/dvs/spark/core/Assignment/Simple/Solutions/Assignment1.scala:95:32: [wartremover:Recursion] Unmarked recursion[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (x == currentvalue) Removeduplicates(xs, currentvalue, currentlist)[0m
[0m[[0m[33mwarn[0m] [0m[0m                               ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/cloudera/projects/SparkCourse/sparkcore/src/main/scala/org/dvs/spark/core/Assignment/Simple/Solutions/Assignment1.scala:96:14: [wartremover:Recursion] Unmarked recursion[0m
[0m[[0m[33mwarn[0m] [0m[0m        else Removeduplicates(xs, x, x :: currentlist)[0m
[0m[[0m[33mwarn[0m] [0m[0m             ^[0m
[0m[[0m[33mwarn[0m] [0m[0m15 warnings found[0m
